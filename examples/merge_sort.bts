' --- Merge Sort Implementation for Bantas ---

' --- Configuration & Registers ---
' 1: n (size of the array)
' 2: curr_size (size of subarrays to merge, iterates 1, 2, 4, ...)
' 3: left_start (starting index of the left subarray for a merge)

' --- Merge-specific Registers ---
' 4: mid (end index of the left subarray)
' 5: right_end (end index of the right subarray)
' 6: i (pointer for the left subarray)
' 7: j (pointer for the right subarray)
' 8: k (pointer for the auxiliary array)
' 9: temp_val_a (for holding array[i])
' 10: temp_val_b (for holding array[j])
' 11: temp_pointer or calculation register

' Array data is in stacks 101-110
' Auxiliary array for merging is in stacks 201-210

' --- Setup the Array ---
?, "--- Merge Sort in Bantas ---"

@,1
<,10         ' n = 10

' Data stored from stack 101 to 110
@,101
<,4
@,102
<,10
@,103
<,3
@,104
<,5
@,105
<,1
@,106
<,8
@,107
<,9
@,108
<,2
@,109
<,7
@,110
<,6

' --- Print Initial Array ---
?, "Initial unsorted array:"
[,1
  @,11
  <,100
  +,@0
  ?,@@11
  @,0
  +,1
],@1
?, ""

' --- Start of Iterative Merge Sort ---
?, "Sorting..."

' Outer loop: for curr_size = 1, 2, 4, ... while curr_size < n
@,2
<,1
[,1 ' while(true)
  @,11
  <,@1
  -,@2
  #,<1
    @,0
    <,0
  !
    ' Inner loop: for left_start = 1, 1 + 2*size, ...
    @,3
    <,1
    [,1 ' while(true)
      @,11
      <,@1
      -,@3
      #,<1
        @,0
        <,0
      !
        ' --- Calculate mid and right_end boundaries ---
        ' mid = min(left_start + curr_size - 1, n)
        @,4
        <,@3
        +,@2
        -,1
        @,11
        <,@4
        -,@1
        #,>0
          @,4
          <,@1
        ;

        ' right_end = min(left_start + 2*curr_size - 1, n)
        @,5
        <,@3
        +,@2
        +,@2
        -,1
        @,11
        <,@5
        -,@1
        #,>0
          @,5
          <,@1
        ;

        ' --- MERGE a[left...mid] and a[mid+1...right_end] ---
        @,6
        <,@3     ' i = left_start
        @,7
        <,@4     ' j = mid + 1
        +,1
        @,8
        <,@3     ' k = left_start (for aux array)

        ' Main merge loop
        [,1 ' while(true)
          ' break condition: if i > mid or j > right_end
          @,11
          <,@6
          -,@4
          #,>0
            @,0
            <,0
          !
            @,11
            <,@7
            -,@5
            #,>0
              @,0
              <,0
            ;
          ;
          @,0
          #,>0
            ' Compare array[i] and array[j]
            @,11
            <,100
            +,@6
            @,9
            <,@@11
            @,11
            <,100
            +,@7
            @,10
            <,@@11
            
            @,9
            -,@10
            #,>0
              @,11
              <,200
              +,@8
              @,@11
              <,@10
              @,7
              +,1
            !
              @,11
              <,100
              +,@6
              @,9
              <,@@11
              @,11
              <,200
              +,@8
              @,@11
              <,@9
              @,6
              +,1
            ;
            @,8
            +,1
          ;
        ],>0

        ' Copy remaining elements from left subarray (if any)
        [,1 ' while i <= mid
          @,11
          <,@6
          -,@4
          #,>0
            @,0
            <,0
          ;
          @,0
          #,>0
            @,11
            <,100
            +,@6
            @,9
            <,@@11
            @,11
            <,200
            +,@8
            @,@11
            <,@9
            @,6
            +,1
            @,8
            +,1
          ;
        ],>0

        ' Copy remaining elements from right subarray (if any)
        [,1 ' while j <= right_end
          @,11
          <,@7
          -,@5
          #,>0
            @,0
            <,0
          ;
          @,0
          #,>0
            @,11
            <,100
            +,@7
            @,10
            <,@@11
            @,11
            <,200
            +,@8
            @,@11
            <,@10
            @,7
            +,1
            @,8
            +,1
          ;
        ],>0

        ' Copy merged elements from aux back to original array
        [,@3
          @,11
          <,200
          +,@0
          @,9
          <,@@11
          @,11
          <,100
          +,@0
          @,@11
          <,@9
          @,0
          +,1
        ],@5

        ' -- Update left_start for next merge ---
        @,3
        +,@2
        @,3
        +,@2
      ;
    ],>0

    ' -- Update curr_size for next pass ---
    @,2
    *,2
  ;
],>0

?, ""
?, "--- Sort Complete ---"
?, "Final sorted array:"
' --- Print Final Array ---
[,1
  @,11
  <,100
  +,@0
  ?,@@11
  @,0
  +,1
],@1
